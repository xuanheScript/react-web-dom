'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transformSpecificationIntoCSS = exports.transformStyleSheetObjectIntoSpecification = exports.transformObjectExpressionIntoStyleSheetObject = undefined;
exports.transform = transform;
exports.transformFile = transformFile;
exports.transformFileSync = transformFileSync;

var _transformObjectExpressionIntoStyleSheetObject = require('./transformObjectExpressionIntoStyleSheetObject');

var _transformObjectExpressionIntoStyleSheetObject2 = _interopRequireDefault(_transformObjectExpressionIntoStyleSheetObject);

var _transformStyleSheetObjectIntoSpecification = require('./transformStyleSheetObjectIntoSpecification');

var _transformStyleSheetObjectIntoSpecification2 = _interopRequireDefault(_transformStyleSheetObjectIntoSpecification);

var _transformSpecificationIntoCSS = require('./transformSpecificationIntoCSS');

var _transformSpecificationIntoCSS2 = _interopRequireDefault(_transformSpecificationIntoCSS);

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _recast = require('recast');

var _transformAST = require('./transformAST');

var _transformAST2 = _interopRequireDefault(_transformAST);

var _buildCSS = require('./buildCSS');

var _buildCSS2 = _interopRequireDefault(_buildCSS);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.transformObjectExpressionIntoStyleSheetObject = _transformObjectExpressionIntoStyleSheetObject2.default;
exports.transformStyleSheetObjectIntoSpecification = _transformStyleSheetObjectIntoSpecification2.default;
exports.transformSpecificationIntoCSS = _transformSpecificationIntoCSS2.default;
function transform(source) {
  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

  options.filename = options.filename || 'unknown';

  var stylesheets = {};
  var ast = (0, _recast.parse)(source, {
    sourceFileName: options.filename
  });

  (0, _transformAST2.default)(ast, stylesheets, options);

  var printOptions = {};

  if (options.sourceMapName) {
    printOptions.sourceMapName = options.sourceMapName;
  }

  var result = (0, _recast.print)(ast, printOptions);
  var code = result.code;
  var map = result.map;

  var css = (0, _buildCSS2.default)(stylesheets, options);

  return { code: code, map: map, css: css };
}

function transformFile(filename, options, callback) {
  if (typeof options === 'function') {
    callback = options;
    options = {};
  }

  options.filename = filename;

  _fs2.default.readFile(filename, function (err, source) {
    if (err) {
      return callback(err);
    }

    var result = undefined;

    try {
      result = transform(source, options);
    } catch (exc) {
      return callback(exc);
    }

    callback(null, result);
  });
}

function transformFileSync(filename) {
  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

  options.filename = filename;

  return transform(_fs2.default.readFileSync(filename), options);
}

exports.default = {
  transform: transform,
  transformFile: transformFile,
  transformFileSync: transformFileSync,
  transformObjectExpressionIntoStyleSheetObject: _transformObjectExpressionIntoStyleSheetObject2.default,
  transformStyleSheetObjectIntoSpecification: _transformStyleSheetObjectIntoSpecification2.default,
  transformSpecificationIntoCSS: _transformSpecificationIntoCSS2.default
};
